// Generated by view binder compiler. Do not edit!
package com.next.up.code.capstone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.next.up.code.capstone.R;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailTouristAttractionBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ToggleButton btnFavorite;

  @NonNull
  public final CardView btnMaps;

  @NonNull
  public final CardView cvCover;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final LinearLayout llHeaderList;

  @NonNull
  public final LinearLayout llHeaderRent;

  @NonNull
  public final RecyclerView rvGallery;

  @NonNull
  public final RecyclerView rvPlace;

  @NonNull
  public final RecyclerView rvTicket;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvFrom;

  @NonNull
  public final TextView tvGallery;

  @NonNull
  public final TextView tvPlace;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTitleGallery;

  @NonNull
  public final TextView tvTitlePricePlace;

  @NonNull
  public final TextView tvTitlePriceTicket;

  @NonNull
  public final TextView tvTouristAttractionName;

  @NonNull
  public final YouTubePlayerView youTubePlayerView;

  private ActivityDetailTouristAttractionBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView btnBack, @NonNull ToggleButton btnFavorite, @NonNull CardView btnMaps,
      @NonNull CardView cvCover, @NonNull ImageView ivCover, @NonNull LinearLayout llHeaderList,
      @NonNull LinearLayout llHeaderRent, @NonNull RecyclerView rvGallery,
      @NonNull RecyclerView rvPlace, @NonNull RecyclerView rvTicket, @NonNull TextView tvAddress,
      @NonNull TextView tvCategory, @NonNull TextView tvFrom, @NonNull TextView tvGallery,
      @NonNull TextView tvPlace, @NonNull TextView tvPrice, @NonNull TextView tvTitleGallery,
      @NonNull TextView tvTitlePricePlace, @NonNull TextView tvTitlePriceTicket,
      @NonNull TextView tvTouristAttractionName, @NonNull YouTubePlayerView youTubePlayerView) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnFavorite = btnFavorite;
    this.btnMaps = btnMaps;
    this.cvCover = cvCover;
    this.ivCover = ivCover;
    this.llHeaderList = llHeaderList;
    this.llHeaderRent = llHeaderRent;
    this.rvGallery = rvGallery;
    this.rvPlace = rvPlace;
    this.rvTicket = rvTicket;
    this.tvAddress = tvAddress;
    this.tvCategory = tvCategory;
    this.tvFrom = tvFrom;
    this.tvGallery = tvGallery;
    this.tvPlace = tvPlace;
    this.tvPrice = tvPrice;
    this.tvTitleGallery = tvTitleGallery;
    this.tvTitlePricePlace = tvTitlePricePlace;
    this.tvTitlePriceTicket = tvTitlePriceTicket;
    this.tvTouristAttractionName = tvTouristAttractionName;
    this.youTubePlayerView = youTubePlayerView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailTouristAttractionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailTouristAttractionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_tourist_attraction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailTouristAttractionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_favorite;
      ToggleButton btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btn_maps;
      CardView btnMaps = ViewBindings.findChildViewById(rootView, id);
      if (btnMaps == null) {
        break missingId;
      }

      id = R.id.cv_cover;
      CardView cvCover = ViewBindings.findChildViewById(rootView, id);
      if (cvCover == null) {
        break missingId;
      }

      id = R.id.iv_cover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ll_header_list;
      LinearLayout llHeaderList = ViewBindings.findChildViewById(rootView, id);
      if (llHeaderList == null) {
        break missingId;
      }

      id = R.id.ll_header_rent;
      LinearLayout llHeaderRent = ViewBindings.findChildViewById(rootView, id);
      if (llHeaderRent == null) {
        break missingId;
      }

      id = R.id.rv_gallery;
      RecyclerView rvGallery = ViewBindings.findChildViewById(rootView, id);
      if (rvGallery == null) {
        break missingId;
      }

      id = R.id.rv_place;
      RecyclerView rvPlace = ViewBindings.findChildViewById(rootView, id);
      if (rvPlace == null) {
        break missingId;
      }

      id = R.id.rv_ticket;
      RecyclerView rvTicket = ViewBindings.findChildViewById(rootView, id);
      if (rvTicket == null) {
        break missingId;
      }

      id = R.id.tv_address;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_from;
      TextView tvFrom = ViewBindings.findChildViewById(rootView, id);
      if (tvFrom == null) {
        break missingId;
      }

      id = R.id.tv_gallery;
      TextView tvGallery = ViewBindings.findChildViewById(rootView, id);
      if (tvGallery == null) {
        break missingId;
      }

      id = R.id.tv_place;
      TextView tvPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvPlace == null) {
        break missingId;
      }

      id = R.id.tv_price;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tv_title_gallery;
      TextView tvTitleGallery = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleGallery == null) {
        break missingId;
      }

      id = R.id.tv_title_price_place;
      TextView tvTitlePricePlace = ViewBindings.findChildViewById(rootView, id);
      if (tvTitlePricePlace == null) {
        break missingId;
      }

      id = R.id.tv_title_price_ticket;
      TextView tvTitlePriceTicket = ViewBindings.findChildViewById(rootView, id);
      if (tvTitlePriceTicket == null) {
        break missingId;
      }

      id = R.id.tv_tourist_attraction_name;
      TextView tvTouristAttractionName = ViewBindings.findChildViewById(rootView, id);
      if (tvTouristAttractionName == null) {
        break missingId;
      }

      id = R.id.youTubePlayerView;
      YouTubePlayerView youTubePlayerView = ViewBindings.findChildViewById(rootView, id);
      if (youTubePlayerView == null) {
        break missingId;
      }

      return new ActivityDetailTouristAttractionBinding((CoordinatorLayout) rootView, btnBack,
          btnFavorite, btnMaps, cvCover, ivCover, llHeaderList, llHeaderRent, rvGallery, rvPlace,
          rvTicket, tvAddress, tvCategory, tvFrom, tvGallery, tvPlace, tvPrice, tvTitleGallery,
          tvTitlePricePlace, tvTitlePriceTicket, tvTouristAttractionName, youTubePlayerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
